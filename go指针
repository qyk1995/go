package main

import (
	"fmt"
)

func main() {
	a := 200
	fmt.Println(&a)
	b := &a // b指向变量a的地址
	c := *b // c代表b指针指向的变量
        c++  // 变量值加1
	fmt.Println(c)
	fmt.Println(a)
	fmt.Println(b)
}


输出：
0xc000012068
201
200
0xc000012068



package main

import ("fmt")  // 导入内置 fmt 

func main(){  // main函数，是程序执行的入口

	var i1 = 5
	var intp *int // 定义为指针类型，
	fmt.Println(&i1)
	intp = &i1
	*intp = 4
	fmt.Println(intp,*intp,i1) //在指针类型前面加上 * 号（前缀）来获取指针所指向的内容
}
输出：
0xc000012088
0xc000012088 4 4


package main

import ("fmt")  // 导入内置 fmt 


type Twots struct {
	a int
	b int

}


func main(){  // main函数，是程序执行的入口
	var a int = 20
	var b int = 304

	swap(&a, &b)
	fmt.Println(a)

	fmt.Println(b)
}

func  swap(x, y *int) {
	var tmp int
	tmp = *x // 将x 赋值 tmp
	fmt.Println(tmp)
	*x = *y // 将y 赋值 x
	*y = tmp
	
}

输出：
20 
304
20




参考资料：
https://www.jianshu.com/p/63f3bfb58687
https://learnku.com/go/t/35168
